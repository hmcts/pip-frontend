{% from "govuk/components/table/macro.njk" import govukTable as 'govukTable' %}
{% from "./macros/common-components.njk" import goBack, backToTopButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{%- from "moj/components/filter/macro.njk" import mojFilter -%}
{%- from "moj/components/button-menu/macro.njk" import mojButtonMenu -%}

{% extends "template.njk" %}
{% block pageTitle %}
  {{ title }}
{% endblock %}
{% block beforeContent %}
  {{ super() }}
  {{ goBack() }}
{% endblock %}
{% block content %}
  <h1 id='page-heading' class="govuk-heading-l">{{ heading }}</h1>
  <div id="grid-row" class="govuk-grid-row parent-box alphabetical-box">
    <div class="layout-width-two-fifths govuk-!-display-inline-block hide" id="filters">
      <div class="filters">
        {% set checkedFilters = [] %}
        {% set toBeCreated = true %}
        {% set filterOptionsHtml %}
          {% for key, option in filterOptions %}
            {% set checkedFilterItems = [] %}
            {% set items = [] %}
            {% for value, item in option %}
              {% set _ = items.push({
                value: item.value,
                text: item.text,
                checked: item.checked
              }) %}
              {% if item.checked %}
                {% set _ = checkedFilterItems.push({href: '?clear=' + item.value, text: item.text}) %}
              {% endif %}
            {% endfor %}
            {% set filterKey = jurisdiction if key == 'Jurisdiction' else region %}
            {% if checkedFilterItems| length > 0 %}
              {% set _ = checkedFilters.push({heading: {text: filterKey}, items: checkedFilterItems}) %}
            {% endif %}
            {% if toBeCreated %}
              <div class="moj-button-menu filters__innerButton" id="innerButton">
                <div class="moj-button-menu__wrapper">
                  <a href="#" role="button" draggable="false"
                     class="govuk-button moj-button-menu__item govuk-button--secondary" data-module="govuk-button"
                     onclick="toggleFilters()">
                    {{ hide }}
                  </a>
                </div>
              </div>
              {% set toBeCreated = false %}
            {% endif %}
            {{ govukCheckboxes({
              idPrefix: key,
              name: key,
              classes: "govuk-checkboxes--small",
              fieldset: {
                legend: {
                  text: filterKey,
                  classes: 'govuk-fieldset__legend--m'
                }
              },
              items: items
            }) }}
          {% endfor %}
        {% endset %}
        <div class="filter-form">
          <form method="post" action="alphabetical-search" class="moj-filter-layout__filter layout-width-four-fifths"
                autocomplete="off">
            {{ mojFilter({
              heading: {
                text: filter
              },
              selectedFilters: {
                clearLink: {
                  text: clearAll,
                  href: '?clear=all'
                },
                heading: {
                  text: selectedFilter
                },
                categories: checkedFilters
              },
              optionsHtml: filterOptionsHtml
            }) }}
          </form>
        </div>
      </div>
    </div>
    <div class="layout-width-three-fifths" id="content">

      <div class="moj-button-menu">
        <div class="moj-button-menu__wrapper">
          <a href="#" role="button" draggable="false" class="govuk-button moj-button-menu__item govuk-button--secondary"
             data-module="govuk-button" onclick="toggleFilters()">
            {{ show }}
          </a>
        </div>
      </div>
      <nav class="govuk-grid-row govuk-!-margin-bottom-8" aria-label="{{ aria.labelNavHeader }}">
        {% for key, value in courtList %}
          {% if value| length == 0 %}
            <div class="govuk-grid-column width-column govuk-!-font-size-19">
              <a id='{{ key }}-selector' class="govuk-link govuk-link--no-underline" aria-label="{{ aria.labelNav}} {{ key }}">{{ key }}</a>
            </div>
          {% else %}
            <div class="govuk-grid-column width-column govuk-!-font-size-19">
              <a id='{{ key }}-selector' href='#{{ key }}' class="govuk-link govuk-link--no-visited-state">{{ key }}</a>
            </div>
          {% endif %}
        {% endfor %}
      </nav>
      <table class="govuk-table">
        <tbody class="govuk-table__body">
        {% for key, value in courtList %}
          {% if value | length > 0 %}
            {% for courtName, courtDetails in value %}
              {% if courtDetails.id > 0 %}
                <tr class="govuk-table__row">
                  {% if first != key %}
                    {% set first = key %}
                    <th scope="row" class="govuk-table__header">
                      <div id="{{ key }}" class="govuk-!-font-size-27">{{ key }}</div>
                    </th>
                  {% else %}
                    <th scope="row" aria-hidden="true" class="govuk-table__header">
                    </th>
                  {% endif %}
                  <td class="govuk-table__cell">
                    <a href="/summary-of-publications?courtId={{ courtDetails.id }}" class="govuk-link">{{ courtName }}</a>
                  </td>
                </tr>
              {% endif %}
            {% endfor %}
            {% set first = '' %}
          {% endif %}
        {% endfor %}
        </tbody>
      </table>
      {{ super() }}
    </div>
  </div>
{% endblock %}
{% block bodyEnd %}
  {{ super() }}
  <script>

    //Used to ensure that page focus is set to top when the filters reload the page
    window.onload = function() {
      window.scrollTo(0,0);
    };

    if (window.history.replaceState) {
      window.history.replaceState(null, null, window.location.href);
    }

    // The following function is hiding content and navigation due to screen readers to read behind the visible panel
    function toggleFilters() {
      var element = document.getElementById("filters");
      var content = document.getElementById("content");
      var navigation = document.getElementsByClassName("moj-sub-navigation pub-navigation govuk-!-margin-bottom-0");
      var skipLink = document.getElementsByClassName("govuk-skip-link");
      var header = document.getElementsByClassName("govuk-header");
      var backLink = document.getElementsByClassName("govuk-back-link");
      var footer = document.getElementsByClassName("govuk-footer");


      element.classList.toggle("hide");
      content.classList.toggle("hide");
      navigation[0].classList.toggle("hide");
      skipLink[0].classList.toggle("hide");
      header[0].classList.toggle("hide");
      backLink[0].classList.toggle("hide");
      footer[0].classList.toggle("hide");
      if (element.className.indexOf('hide') > 0) {
        document.getElementsByClassName('govuk-button moj-button-menu__item govuk-button--secondary')[0].text = "{{ show }}";
      } else {
        document.getElementsByClassName('govuk-button moj-button-menu__item govuk-button--secondary')[0].text = "{{ hide }}";

        //This ensures that focus works correctly for screen readers in the filter box.
        var elements = document.getElementsByClassName('govuk-heading-m');
        elements[0].setAttribute("tabindex", "0");
        elements[1].setAttribute("tabindex", "0");
        elements[0].focus();
      }
    }
    //Concat href to maintain filter values when clearing single
    let tags = document.querySelectorAll('.moj-filter__tag');
    let currentParam = window.location.search.split('&');
    tags.forEach(element => {
      const tmp = element.href.slice(element.href.indexOf('?'), element.href.length);
      element.href = buildHref(tmp, currentParam);
    })
    function buildHref(filterToClear, currentPath) {
      const deleteVal = filterToClear.split('=')[1];
      let href = currentPath ? currentPath[0].replace(deleteVal, '') + filterToClear.replace('?', '&') : filterToClear
      return href.replace(',,', ',');
    }
    // Replace apply filters button with localisation text as currently unconfigurable
    document.getElementsByClassName("moj-filter-layout__filter")[0].getElementsByTagName("button")[0].innerHTML = '{{ applyFiltersButton }}';

    //Add aria label to filter heading
    document.getElementsByClassName("moj-filter__header-title")[0]
      .getElementsByTagName("h2")[0]
      .setAttribute("aria-label", "{{ aria.filterLabel }}");
  </script>
{% endblock %}
