{% from "./macros/common-components.njk" import goBack, searchInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{%- from "govuk/components/checkboxes/macro.njk" import govukCheckboxes -%}
{%- from "moj/components/filter/macro.njk" import mojFilter -%}
{%- from "govuk/components/checkboxes/macro.njk" import govukCheckboxes -%}
{%- from "govuk/components/input/macro.njk" import govukInput -%}
{% from "govuk/components/accordion/macro.njk" import govukAccordion %}


{% extends "list-template.njk" %}
{% block pageTitle %}
  {{ title }}
{% endblock %}
{% block beforeContent %}
  {{ super() }}
  {{ goBack(text = backButton) }}
{% endblock %}
{% block content %}
  <h2 id='page-heading' class="govuk-heading-l">{{ header }}</h2>

  <details class="govuk-details" data-module="govuk-details">
    <summary class="govuk-details__summary">
      <span class="govuk-details__summary-text">
      {{ whatIsSJP }}
      </span>
    </summary>
    <div class="govuk-details__text">
      {{ sjpDescription }}
    </div>
  </details>


  <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-bottom-1">{{ listDate }} {{ contactDate }}</p>
  <p class="govuk-body">{{ published }} {{ publishedDateTime }} {{ publishedAt }} {{ publishedTime }}</p>

  {% if user.roles and user.roles in ['VERIFIED'] %}
    {{ govukButton({
      attributes: {
        id: 'download-button'
      },
      text: downloadButton,
      href: 'list-download-disclaimer?artefactId=' + artefactId
    }) }}
  {% endif %}

  {{ searchInput(text = searchCases) }}

  <button class="govuk-button govuk-button--secondary govuk-!-margin-top-5 hide-show-button" data-module="govuk-button">
    {% if showFilters %} {{ hide }} {% else %} {{ show }} {% endif %}
  </button>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third govuk-!-padding-left-0 govuk-!-padding-right-4 {% if not showFilters %} always-hide {% endif %}", id="filters">
      <div class="filter-form">
        {% set checkedFilters = [] %}
        {% set toBeCreated = true %}
        {% set filterOptionsHtml %}
            {{ govukInput({
                label: {
                    text: searchFilters,
                    classes: 'govuk-label--m'
                },
                id: 'search-filters',
                name: 'search-filters'
            }) }}
          {% for key, options in filters %}
{#          <div class="moj-button-menu__wrapper">#}
{#              <a href="javascript:;" role="button" draggable="false"#}
{#                 class="govuk-button moj-button-menu__item govuk-button--secondary" data-module="govuk-button"#}
{#                 onclick="hideFilterSection('{{ key }}')" id="{{ key }}-button">#}
{#                  Hide {{ key }}#}
{#              </a>#}
{#          </div>#}
            {% set checkedFilterItems = [] %}
            {% set items = [] %}
            {% for item in options %}
              {% set _ = items.push({
                value: item.value,
                text: item.text,
                checked: item.checked
              }) %}
              {% if item.checked %}
                {% set _ = checkedFilterItems.push({href: '?clear=' + item.value, text: item.text}) %}
              {% endif %}
            {% endfor %}

            {% set filterHeader = postcode if key == 'postcodes' else prosecutor %}
            {% if checkedFilterItems | length > 0 %}
              {% set _ = checkedFilters.push({heading: {text: filterHeader}, items: checkedFilterItems}) %}
            {% endif %}

            {% if toBeCreated %}
              <div class="moj-button-menu filters__innerButton" id="innerButton">
                <div class="moj-button-menu__wrapper">
                  <a href="#" role="button" draggable="false"
                     class="govuk-button moj-button-menu__item govuk-button--secondary" data-module="govuk-button"
                     onclick="toggleFilters()">
                    {{ hide }}
                  </a>
                </div>
              </div>
              {% set toBeCreated = false %}
            {% endif %}
              <div class="govuk-form-group">
                  <fieldset class="govuk-fieldset">
                      <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                          <h1 class="govuk-fieldset__heading">
                              <a href="javascript:;" class="govuk-link" onclick="hideFilterSection('{{ key }}')">{{ filterHeader }}

                              </a>
                              <span class="govuk-body govuk-!-font-size-18 filter-colour" id="{{ key }}-link">&#9660</span>
                          </h1>
                      </legend>
                      <div class="govuk-checkboxes govuk-checkboxes--small" id="{{ key }}-checkbox" data-module="govuk-checkboxes">
                          {% for item in items %}
                              <div class="govuk-checkboxes__item">
                                  <input class="govuk-checkboxes__input" name="{{ key }}" type="checkbox" value="{{ item.value }}" {% if item.checked %} checked {% endif %}>
                                  <label class="govuk-label govuk-checkboxes__label" for="{{ key }}">
                                      {{ item.text }}
                                  </label>
                              </div>
                          {% endfor %}
                      </div>
                  </fieldset>
              </div>
          {% endfor %}
        {% endset %}
        <form method="post" action="sjp-press-list?artefactId={{ artefactId }}" class="moj-filter-layout__filter layout-width-four-fifths"
              autocomplete="off">
        {{ mojFilter({
          heading: {
            text: filter
          },
          selectedFilters: {
            heading: {
              text: selectedFilters
            },

            clearLink: {
              text: clearFilters,
              href: '?artefactId=' + artefactId + '&clear=all'
            },

            categories: checkedFilters
          },
          optionsHtml: filterOptionsHtml
        }) }}
        </form>
      </div>
    </div>
    <div>
    <div class="parent-box">
      <div class="overflow-table govuk-body search-area">
        {% set hearingCount = 0 %}

        {% for sjpCase in sjpData %}
          {% set hearingCount = hearingCount + 1 %}
          <dl class="govuk-summary-list--no-border">
            <div class="govuk-summary-list__row">
              <dt class="govuk-summary-list__key">
                {{ name }}
              </dt>
              <dd class="govuk-summary-list__value">
                {{ sjpCase.name }}
              </dd>
            </div>
            <div class="govuk-summary-list__row">
              <dt class="govuk-summary-list__key">
                {{ dateOfBirth }}
              </dt>
              <dd class="govuk-summary-list__value">
                {{ sjpCase.dob }} ({{ sjpCase.age }})
              </dd>
            </div>
            <div class="govuk-summary-list__row">
              <dt class="govuk-summary-list__key">
                {{ reference }}
              </dt>
              <dd class="govuk-summary-list__value">
                {{ sjpCase.caseUrn }}
              </dd>
            </div>
            <div class="govuk-summary-list__row">
              <dt class="govuk-summary-list__key">
                {{ address }}
              </dt>
              <dd class="govuk-summary-list__value">
                {{ sjpCase.address }}
              </dd>
            </div>
            <div class="govuk-summary-list__row">
              <dt class="govuk-summary-list__key">
                {{ prosecutor }}
              </dt>
              <dd class="govuk-summary-list__value">
                {{ sjpCase.organisationName }}
              </dd>
            </div>

            {% for offence in sjpCase.offences %}
              <p class="govuk-body">
                {{ reportingRestriction }} - {{ offence.reportingRestrictionFlag }}<br/>
                {{ offence.offenceTitle }} - {{ offence.offenceWording }}
              </p>
            {% endfor %}
            {% if totalHearings !== hearingCount %}
              <hr>
            {% endif %}
          </dl>
        {% endfor %}
      </div>
      {{ super() }}
    </div>
    </div>
  </div>
{% endblock %}
{% block bodyEnd %}
  {{ super() }}
  <script>
      var searchFilters = document.getElementById('search-filters');
      searchFilters.addEventListener('keyup', searchFilterItems);

      // This function is used to dynamically show/hide individual filter checkbox items based on the search box value
      function searchFilterItems() {
          var filters = document.getElementsByClassName('govuk-checkboxes__item');

          for (var i = 0; i < filters.length; i++) {
              localStorage.setItem('searchFiltersValue', searchFilters.value)
              if (filters[i].innerText.toLowerCase().includes(searchFilters.value.toLowerCase())) {
                  filters[i].style.removeProperty('display');
              } else {
                  filters[i].style.display = 'none'
              }
          }
      }

    function hideFilterSection(key) {
        const section = document.getElementById(key + '-checkbox');
        const link = document.getElementById(key + '-link');
        section.classList.toggle("always-hide");

        const languageKey = key === 'postcodes' ? '{{ postcode }}' : '{{ prosecutor }}'

        if (section.classList.contains('always-hide')) {
            link.innerHTML = '&#9654;'
        } else {
          link.innerHTML = '&#9660;'
        }
    }

    // The following function is hiding content and navigation due to screen readers to read behind the visible panel
    function toggleFilters() {
      var element = document.getElementById("filters");

      element.classList.toggle("always-hide");
      if (element.className.indexOf('always-hide') > 0) {
        document.getElementsByClassName('hide-show-button')[0].innerHTML = '{{ show }}';
      } else {
        document.getElementsByClassName('hide-show-button')[0].innerHTML = '{{ hide }}';

        //This ensures that focus works correctly for screen readers in the filter box.
        var elements = document.getElementsByClassName('govuk-heading-m');
        elements[0].setAttribute("tabindex", "0");
        elements[1].setAttribute("tabindex", "0");
        elements[0].focus();
      }
    }

    // Concat href to maintain filter values when clearing single
    let tags = document.querySelectorAll('.moj-filter__tag');
    let currentQueryArray = window.location.search.split('&');

    const searchFiltersValue = localStorage.getItem('searchFiltersValue');
    localStorage.removeItem('searchFiltersValue');
    tags.forEach(element => {
      element.href = '/sjp-press-list?artefactId=' + '{{ artefactId }}' + '&' + buildHref(element.href, currentQueryArray);
    })

    function buildHref(elementHref, currentQueryArray) {
      const elementQueryString = elementHref.slice(elementHref.indexOf('?'), elementHref.length);
      const deleteVal = elementQueryString.split('=')[1];

      let currentFilterValues = currentQueryArray.find(item => item.startsWith('filterValues') || item.startsWith('?filterValues'))
      currentFilterValues = currentFilterValues.startsWith('?') ? currentFilterValues.substring(1) : currentFilterValues;

      // Need to remove the search box value from 'filterValues'
      if (searchFiltersValue) {
          const filterValuesPrefix = 'filterValues=' + searchFiltersValue + ',';
          if (currentFilterValues.startsWith(filterValuesPrefix)) {
              currentFilterValues = currentFilterValues.replace(filterValuesPrefix, 'filterValues=');
          }
      }

      let href = currentFilterValues ? currentFilterValues.replace(deleteVal, '') + elementQueryString.replace('?', '&') : elementQueryString;
      return href.replace(',,', ',');
    }

    document.getElementsByClassName('hide-show-button')[0].addEventListener("click", toggleFilters);

    // Replace apply filters button with localisation text as currently unconfigurable
    document.getElementsByClassName("moj-filter-layout__filter")[0].getElementsByTagName("button")[0].innerHTML = '{{ applyFilters }}';

  </script>
{% endblock %}
