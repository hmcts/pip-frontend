{% from "govuk/components/table/macro.njk" import govukTable as 'govukTable' %}

{% extends "template.njk" %}
{% block pageTitle %}
  {{ "Court List" | safe }}
{% endblock %}
{% block beforeContent %}
  {% from "govuk/components/back-link/macro.njk" import govukBackLink %}
  {{ govukBackLink({
    text: "Back",
    href: "/search-option"
  }) }}
{% endblock %}
{% block content %}
  <div id="grid-row" class="govuk-grid-row">
    <div id="parent-box" class="layout-width-one-fifth govuk-!-display-inline-block">
        <a id="back-to-top-button" class="floating-back-to-top govuk-link govuk-link--no-underline govuk-!-font-size-19" href="#">
          <span class="govuk-!-font-size-24">&#8593</span>
          <span class="govuk-link">Back to top</span>
        </a>
    </div>
    <div class="layout-width-four-fifths">
      <h2 class="govuk-heading-l">Find a court or tribunal listing</h2>
      <div class="govuk-grid-row govuk-!-margin-bottom-8">
        {% for key, value in courtList %}
          {% if value| length == 0 %}
            <div class="govuk-grid-column width-column govuk-!-font-size-19">
              <a class="govuk-link govuk-link--no-underline">{{ key }}</a>
            </div>
          {% else %}
            <div class="govuk-grid-column width-column govuk-!-font-size-19">
              <a href='#{{ key }}' class="govuk-link govuk-link--no-visited-state">{{ key }}</a>
            </div>
          {% endif %}
        {% endfor %}
      </div>

      <table class="govuk-table">
        <thead class="govuk-table__head">
        <tr class="govuk-table__row">
          <th scope="col" class="govuk-table__header app-custom-class"></th>
          <th scope="col" class="govuk-table__header govuk-!-width-three-quarters">Court of tribunal</th>
          <th scope="col" class="govuk-table__header number_hearings govuk-!-width-one-quarter">Number of hearings</th>
        </tr>
        </thead>
        <tbody class="govuk-table__body">
        {% for key, value in courtList %}
          <tr class="govuk-table__row">
            <th scope="row" class="govuk-table__header">
              <h2 id="{{ key }}" class="govuk-heading-l">{{key}}</h2>
            </th>
            <td class="govuk-table__cell">
              {% if value | length == 0 %}
                <div class="text_disabled">No hearings are scheduled in any of these</div>
                <div class="text_disabled">locations today</div>
              {% else %}
                {% for courtName, courtDetails in value %}
                  <div><a href="/hearing-list?courtId={{ courtDetails.id }}" class="govuk-link">{{ courtName }}</a></div>
                {% endfor %}
              {% endif %}
            </td>
            <td class="govuk-table__cell number_hearings">
              {% if value | length == 0 %}
                <div class="text_disabled">0</div>
              {% else %}
                {% for courtName, courtDetails in value %}
                  <div class="number_hearings">{{ courtDetails.hearings }}</div>
                {% endfor %}
              {% endif %}
            </td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    </div>
  </div>

{% endblock %}
{% block bodyEnd %}

<script nonce="{{ scriptNonce }}">

  function BackToTop ($module) {
    this.$module = $module
  }

  BackToTop.prototype.init = function () {
    // Check if we can use Intersection Observers
    if (!('IntersectionObserver' in window)) {
      // If there's no support fallback to regular behaviour
      // Since JavaScript is enabled we can remove the default hidden state
      return this.$module.classList.remove('app-back-to-top--hidden')
    }

    var $footer = document.querySelector('.govuk-footer')

    // Check if there is anything to observe
    if (!$footer) {
      return
    }

    var footerIsIntersecting = false

    var observer = new window.IntersectionObserver(function (entries) {
      // Find the elements we care about from the entries
      var footerEntry = entries.find(function (entry) {
        return entry.target === $footer
      })

      // If there is an entry this means the element has changed so lets check if it's intersecting.
      if (footerEntry) {
        footerIsIntersecting = footerEntry.isIntersecting
      }

      // If the subnav or the footer not visible then fix the back to top link to follow the user
      if (footerIsIntersecting) {
        this.$module.classList.remove('floating-back-to-top--fixed')
      } else {
        this.$module.classList.add('floating-back-to-top--fixed')
      }
    }.bind(this))

    observer.observe($footer)
  }

  var $backToTop = document.querySelector('#back-to-top-button')
  new BackToTop($backToTop).init()
</script>
{% endblock %}
